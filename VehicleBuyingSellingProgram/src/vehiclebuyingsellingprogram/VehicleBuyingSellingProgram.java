/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vehiclebuyingsellingprogram;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.*;
import  java.util.Date;

/**
 *
 * @author RECEP
 */


public class VehicleBuyingSellingProgram extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public VehicleBuyingSellingProgram() throws ClassNotFoundException, SQLException {
        initComponents();
        kayitekle.setVisible(false);
        kayitguncelle.setVisible(false);
        kayitsil.setVisible(false);
        ara_yenile();
        ara_marka_combo.addActionListener (new ActionListener () {
            public void actionPerformed(ActionEvent e) {
                try {
                    ara_model_degistir();
                } catch (SQLException ex) {
                    Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        filtre = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        ara_ilan_adi_text = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        ara_marka_combo = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        ara_model_combo = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        ara_renk_combo = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        ara_vites_combo = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        ara_yakit_combo = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        ara_sehir_combo = new javax.swing.JComboBox<>();
        ara_kilometre_min = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        ara_kilometre_max = new javax.swing.JTextField();
        ara_fiyat_min = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        ara_fiyat_max = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        ara_tarih_combo = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        ara_radio_marka = new javax.swing.JRadioButton();
        ara_radio_model = new javax.swing.JRadioButton();
        ara_radio_kilometre = new javax.swing.JRadioButton();
        ara_aZ_combo = new javax.swing.JComboBox<>();
        ara_radio_fiyat = new javax.swing.JRadioButton();
        ara_artanAzalan_combo = new javax.swing.JComboBox<>();
        ara_buton = new javax.swing.JButton();
        anasayfa = new javax.swing.JPanel();
        ara_scroll = new javax.swing.JScrollPane();
        ara_tablo = new javax.swing.JTable();
        kayitekle = new javax.swing.JPanel();
        ilan = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ilanekle_ilanadi_text = new javax.swing.JTextField();
        ilanekle_ilanfiyat_text = new javax.swing.JTextField();
        ilanekle_km_text = new javax.swing.JTextField();
        ilanekle_arac_combo = new javax.swing.JComboBox<>();
        ilanekle_sehir_combo = new javax.swing.JComboBox<>();
        ilanekle_tarih_text = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        araba = new javax.swing.JPanel();
        araba_ic = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        araba_marka_text = new javax.swing.JTextField();
        araba_model_text = new javax.swing.JTextField();
        araba_kaydet = new javax.swing.JButton();
        arabaekle_vites_combo = new javax.swing.JComboBox<>();
        arabaekle_yakit_combo = new javax.swing.JComboBox<>();
        arabaekle_renk_combo = new javax.swing.JComboBox<>();
        digerleri = new javax.swing.JPanel();
        digerleri_ic = new javax.swing.JPanel();
        digerleri_ad = new javax.swing.JLabel();
        digerleri_text = new javax.swing.JTextField();
        digerleri_kaydet = new javax.swing.JButton();
        kayitsil = new javax.swing.JPanel();
        kayitsil_digerleri = new javax.swing.JPanel();
        digerleri_sil_scroll = new javax.swing.JScrollPane();
        digerleri_sil_table = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        kayitsil_araba = new javax.swing.JPanel();
        araba_sil_scroll = new javax.swing.JScrollPane();
        araba_sil_table = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        kayitsil_ilan = new javax.swing.JPanel();
        ilan_sil_scroll = new javax.swing.JScrollPane();
        ilan_sil_table = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        kayitguncelle = new javax.swing.JPanel();
        kayitguncelle_digerleri = new javax.swing.JPanel();
        digerleri_guncelle_scroll = new javax.swing.JScrollPane();
        digerleri_guncelle_table = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        digerleri_guncelle_deger_text = new javax.swing.JTextField();
        digerleri_guncelle_veri_getir = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        kayitguncelle_araba = new javax.swing.JPanel();
        araba_guncelle_scroll = new javax.swing.JScrollPane();
        araba_guncelle_table = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        araba_guncelle_veri_getir = new javax.swing.JButton();
        araba_guncelle_marka_text = new javax.swing.JTextField();
        araba_guncelle_model_text = new javax.swing.JTextField();
        araba_guncelle_vites_combo = new javax.swing.JComboBox<>();
        araba_guncelle_yakit_combo = new javax.swing.JComboBox<>();
        araba_guncelle_renk_combo = new javax.swing.JComboBox<>();
        kayitguncelle_ilan = new javax.swing.JPanel();
        ilan_guncelle_scroll = new javax.swing.JScrollPane();
        ilan_guncelle_table = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        ilan_guncelle_veri_getir = new javax.swing.JButton();
        ilan_guncelle_ilan_adi_text = new javax.swing.JTextField();
        ilan_guncelle_fiyat_text = new javax.swing.JTextField();
        ilan_guncelle_km_text = new javax.swing.JTextField();
        ilan_guncelle_tarih_text = new javax.swing.JTextField();
        ilan_guncelle_araba_combo = new javax.swing.JComboBox<>();
        ilan_guncelle_sehir_combo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Kayıt Ekle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Kayıt Sil");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Kayıt Güncelle");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "İlan", "Araba", "Yakıt Türü", "Vites Türü", "Renk", "Şehir" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Lütfen işlem yapacağınız tabloyu seçiniz:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166)))
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 500, 900, 100));

        filtre.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel20.setText("İlan Adı:");

        ara_ilan_adi_text.setToolTipText("MightyMFK-Brovia");

        jLabel21.setText("Marka :");

        ara_marka_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz..." }));

        jLabel22.setText("Model :");

        ara_model_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz..." }));

        jLabel23.setText("Renk :");

        ara_renk_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz..." }));

        jLabel24.setText("Vites Türü:");

        ara_vites_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz..." }));

        jLabel25.setText("Yakıt Türü:");

        ara_yakit_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz..." }));

        jLabel26.setText("Şehir :");

        ara_sehir_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz..." }));

        ara_kilometre_min.setToolTipText("");

        jLabel27.setText("-");

        ara_kilometre_max.setToolTipText("");

        ara_fiyat_min.setToolTipText("");

        jLabel28.setText("-");

        ara_fiyat_max.setToolTipText("");

        jLabel29.setText("Tarih:");

        ara_tarih_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz...", "Son 24 Saat", "Son 1 Hafta", "Son 1 Ay", "Son 1 Yıl" }));

        jLabel30.setText("Kilometre:");

        jLabel31.setText("Fiyat:");

        buttonGroup1.add(ara_radio_marka);
        ara_radio_marka.setText("Marka");
        ara_radio_marka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ara_radio_markaActionPerformed(evt);
            }
        });

        buttonGroup1.add(ara_radio_model);
        ara_radio_model.setText("Model");

        buttonGroup2.add(ara_radio_kilometre);
        ara_radio_kilometre.setText("Kilometre");

        ara_aZ_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz...", "A-Z", "Z-A" }));

        buttonGroup2.add(ara_radio_fiyat);
        ara_radio_fiyat.setText("Fiyat");

        ara_artanAzalan_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz...", "Artan", "Azalan" }));

        ara_buton.setText("Ara");
        ara_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ara_butonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filtreLayout = new javax.swing.GroupLayout(filtre);
        filtre.setLayout(filtreLayout);
        filtreLayout.setHorizontalGroup(
            filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ara_buton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ara_artanAzalan_combo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, filtreLayout.createSequentialGroup()
                        .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(filtreLayout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtreLayout.createSequentialGroup()
                                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(4, 4, 4)))
                        .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ara_model_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ara_ilan_adi_text)
                            .addComponent(ara_marka_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ara_renk_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, filtreLayout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ara_vites_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(filtreLayout.createSequentialGroup()
                        .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(filtreLayout.createSequentialGroup()
                                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel31)
                                    .addComponent(ara_radio_marka))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtreLayout.createSequentialGroup()
                                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ara_kilometre_min)
                                    .addComponent(ara_fiyat_min))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ara_kilometre_max)
                            .addComponent(ara_fiyat_max)
                            .addComponent(ara_radio_model, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, filtreLayout.createSequentialGroup()
                        .addComponent(ara_radio_kilometre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(ara_radio_fiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ara_aZ_combo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, filtreLayout.createSequentialGroup()
                        .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(filtreLayout.createSequentialGroup()
                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(filtreLayout.createSequentialGroup()
                                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(4, 4, 4)))
                            .addGroup(filtreLayout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ara_tarih_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ara_yakit_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ara_sehir_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        filtreLayout.setVerticalGroup(
            filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(ara_ilan_adi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(ara_marka_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22)
                    .addComponent(ara_model_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(ara_renk_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(ara_vites_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(ara_yakit_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(ara_sehir_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(ara_tarih_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addGap(8, 8, 8)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ara_kilometre_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(ara_kilometre_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ara_fiyat_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(ara_fiyat_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ara_radio_marka)
                    .addComponent(ara_radio_model))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ara_aZ_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ara_radio_kilometre)
                    .addComponent(ara_radio_fiyat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ara_artanAzalan_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ara_buton, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(filtre, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 10, -1, 590));

        anasayfa.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ara_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IlanID", "Ilan_Adi", "Ilan_Fiyat", "Ilan_Km", "Ilan_Tarih", "Ilan_Araba", "Ilan_Sehir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ara_scroll.setViewportView(ara_tablo);

        javax.swing.GroupLayout anasayfaLayout = new javax.swing.GroupLayout(anasayfa);
        anasayfa.setLayout(anasayfaLayout);
        anasayfaLayout.setHorizontalGroup(
            anasayfaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anasayfaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ara_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                .addContainerGap())
        );
        anasayfaLayout.setVerticalGroup(
            anasayfaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anasayfaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ara_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(anasayfa, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 900, 480));

        kayitekle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setText("İlan Adı:");

        jLabel8.setText("İlan Fiyatı:");

        jLabel9.setText("Araç Km:");

        jLabel10.setText("İlan Tarihi:");

        jLabel11.setText("Araç:");

        jLabel12.setText("Şehir:");

        ilanekle_ilanadi_text.setText("jTextField1");

        ilanekle_ilanfiyat_text.setText("jTextField2");

        ilanekle_km_text.setText("jTextField3");

        ilanekle_tarih_text.setText("GÜN-AY-YIL SAAT-DAKİKA-SANİYE");
        ilanekle_tarih_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ilanekle_tarih_textActionPerformed(evt);
            }
        });

        jButton4.setText("Kaydet");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ilanLayout = new javax.swing.GroupLayout(ilan);
        ilan.setLayout(ilanLayout);
        ilanLayout.setHorizontalGroup(
            ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ilanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ilanekle_ilanadi_text, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(ilanekle_ilanfiyat_text)
                    .addComponent(ilanekle_km_text)
                    .addComponent(ilanekle_arac_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ilanekle_sehir_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ilanekle_tarih_text))
                .addGap(100, 100, 100)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(359, Short.MAX_VALUE))
        );
        ilanLayout.setVerticalGroup(
            ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ilanLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ilanekle_ilanadi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ilanekle_ilanfiyat_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ilanLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(ilanekle_km_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(ilanekle_tarih_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ilanLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ilanekle_arac_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(ilanekle_sehir_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        araba_ic.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Marka:");

        jLabel3.setText("Model:");

        jLabel4.setText("Vites Türü:");

        jLabel5.setText("Yakıt Türü:");

        jLabel6.setText("Renk:");

        araba_marka_text.setText("jTextField1");

        araba_model_text.setText("jTextField2");

        araba_kaydet.setText("Kaydet");
        araba_kaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                araba_kaydetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout araba_icLayout = new javax.swing.GroupLayout(araba_ic);
        araba_ic.setLayout(araba_icLayout);
        araba_icLayout.setHorizontalGroup(
            araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(araba_icLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(28, 28, 28)
                .addGroup(araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(araba_marka_text, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(araba_model_text)
                    .addComponent(arabaekle_vites_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(arabaekle_yakit_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(arabaekle_renk_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(84, 84, 84)
                .addComponent(araba_kaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(404, Short.MAX_VALUE))
        );
        araba_icLayout.setVerticalGroup(
            araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(araba_icLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(araba_marka_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(araba_model_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(araba_kaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arabaekle_vites_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(arabaekle_yakit_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(araba_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(arabaekle_renk_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout arabaLayout = new javax.swing.GroupLayout(araba);
        araba.setLayout(arabaLayout);
        arabaLayout.setHorizontalGroup(
            arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(arabaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(araba_ic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        arabaLayout.setVerticalGroup(
            arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
            .addGroup(arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(arabaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(araba_ic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        digerleri_ad.setText("Default");

        digerleri_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digerleri_textActionPerformed(evt);
            }
        });

        digerleri_kaydet.setText("Kaydet");
        digerleri_kaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digerleri_kaydetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout digerleri_icLayout = new javax.swing.GroupLayout(digerleri_ic);
        digerleri_ic.setLayout(digerleri_icLayout);
        digerleri_icLayout.setHorizontalGroup(
            digerleri_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digerleri_icLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(digerleri_ad, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(digerleri_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(digerleri_kaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(digerleri_text, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(508, Short.MAX_VALUE))
        );
        digerleri_icLayout.setVerticalGroup(
            digerleri_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digerleri_icLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(digerleri_icLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digerleri_ad)
                    .addComponent(digerleri_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(digerleri_kaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(359, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout digerleriLayout = new javax.swing.GroupLayout(digerleri);
        digerleri.setLayout(digerleriLayout);
        digerleriLayout.setHorizontalGroup(
            digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(digerleriLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(digerleri_ic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        digerleriLayout.setVerticalGroup(
            digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
            .addGroup(digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(digerleriLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(digerleri_ic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout kayitekleLayout = new javax.swing.GroupLayout(kayitekle);
        kayitekle.setLayout(kayitekleLayout);
        kayitekleLayout.setHorizontalGroup(
            kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitekleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ilan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitekleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(araba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitekleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(digerleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        kayitekleLayout.setVerticalGroup(
            kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
            .addGroup(kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitekleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ilan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitekleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(araba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(kayitekleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitekleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(digerleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(kayitekle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 900, 480));

        kayitsil.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        digerleri_sil_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        digerleri_sil_scroll.setViewportView(digerleri_sil_table);

        jButton5.setText("Sil");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kayitsil_digerleriLayout = new javax.swing.GroupLayout(kayitsil_digerleri);
        kayitsil_digerleri.setLayout(kayitsil_digerleriLayout);
        kayitsil_digerleriLayout.setHorizontalGroup(
            kayitsil_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitsil_digerleriLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kayitsil_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(digerleri_sil_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addGroup(kayitsil_digerleriLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        kayitsil_digerleriLayout.setVerticalGroup(
            kayitsil_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitsil_digerleriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(digerleri_sil_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );

        araba_sil_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ArabaID", "Marka", "Model", "VitesTuru", "YakitTuru", "Renk"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        araba_sil_scroll.setViewportView(araba_sil_table);

        jButton6.setText("Sil");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kayitsil_arabaLayout = new javax.swing.GroupLayout(kayitsil_araba);
        kayitsil_araba.setLayout(kayitsil_arabaLayout);
        kayitsil_arabaLayout.setHorizontalGroup(
            kayitsil_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitsil_arabaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kayitsil_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(araba_sil_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addGroup(kayitsil_arabaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        kayitsil_arabaLayout.setVerticalGroup(
            kayitsil_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitsil_arabaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(araba_sil_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );

        ilan_sil_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ad", "Fiyat", "Km", "Tarih", "ArabaID", "Şehir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ilan_sil_scroll.setViewportView(ilan_sil_table);

        jButton7.setText("Sil");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kayitsil_ilanLayout = new javax.swing.GroupLayout(kayitsil_ilan);
        kayitsil_ilan.setLayout(kayitsil_ilanLayout);
        kayitsil_ilanLayout.setHorizontalGroup(
            kayitsil_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitsil_ilanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kayitsil_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ilan_sil_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addGroup(kayitsil_ilanLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        kayitsil_ilanLayout.setVerticalGroup(
            kayitsil_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitsil_ilanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ilan_sil_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout kayitsilLayout = new javax.swing.GroupLayout(kayitsil);
        kayitsil.setLayout(kayitsilLayout);
        kayitsilLayout.setHorizontalGroup(
            kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 916, Short.MAX_VALUE)
            .addGroup(kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitsilLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(kayitsil_digerleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitsilLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kayitsil_araba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitsilLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(kayitsil_ilan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        kayitsilLayout.setVerticalGroup(
            kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
            .addGroup(kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitsilLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(kayitsil_digerleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitsilLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kayitsil_araba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(kayitsilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitsilLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(kayitsil_ilan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(kayitsil, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 900, 480));

        kayitguncelle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        digerleri_guncelle_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Default", "Default"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        digerleri_guncelle_table.setToolTipText("");
        digerleri_guncelle_scroll.setViewportView(digerleri_guncelle_table);

        jButton8.setText("Güncelle");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        digerleri_guncelle_veri_getir.setText("Verileri Getir");
        digerleri_guncelle_veri_getir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digerleri_guncelle_veri_getirActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("İçerik :");

        javax.swing.GroupLayout kayitguncelle_digerleriLayout = new javax.swing.GroupLayout(kayitguncelle_digerleri);
        kayitguncelle_digerleri.setLayout(kayitguncelle_digerleriLayout);
        kayitguncelle_digerleriLayout.setHorizontalGroup(
            kayitguncelle_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitguncelle_digerleriLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kayitguncelle_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(digerleri_guncelle_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addGroup(kayitguncelle_digerleriLayout.createSequentialGroup()
                        .addComponent(digerleri_guncelle_veri_getir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitguncelle_digerleriLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(digerleri_guncelle_deger_text, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        kayitguncelle_digerleriLayout.setVerticalGroup(
            kayitguncelle_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitguncelle_digerleriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(digerleri_guncelle_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(kayitguncelle_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digerleri_guncelle_deger_text, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(kayitguncelle_digerleriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(digerleri_guncelle_veri_getir, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        araba_guncelle_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Marka", "Model", "Vites Türü", "Yakit Türü", "Renk"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        araba_guncelle_table.setToolTipText("");
        araba_guncelle_scroll.setViewportView(araba_guncelle_table);

        jButton10.setText("Güncelle");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        araba_guncelle_veri_getir.setText("Verileri Getir");
        araba_guncelle_veri_getir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                araba_guncelle_veri_getirActionPerformed(evt);
            }
        });

        araba_guncelle_vites_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                araba_guncelle_vites_comboActionPerformed(evt);
            }
        });

        araba_guncelle_yakit_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                araba_guncelle_yakit_comboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kayitguncelle_arabaLayout = new javax.swing.GroupLayout(kayitguncelle_araba);
        kayitguncelle_araba.setLayout(kayitguncelle_arabaLayout);
        kayitguncelle_arabaLayout.setHorizontalGroup(
            kayitguncelle_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitguncelle_arabaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kayitguncelle_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(araba_guncelle_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addGroup(kayitguncelle_arabaLayout.createSequentialGroup()
                        .addComponent(araba_guncelle_veri_getir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(kayitguncelle_arabaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(araba_guncelle_marka_text, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(araba_guncelle_model_text, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(araba_guncelle_vites_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(araba_guncelle_yakit_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(araba_guncelle_renk_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        kayitguncelle_arabaLayout.setVerticalGroup(
            kayitguncelle_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitguncelle_arabaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(araba_guncelle_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(kayitguncelle_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(araba_guncelle_marka_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(araba_guncelle_model_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(araba_guncelle_vites_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(araba_guncelle_yakit_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(araba_guncelle_renk_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(kayitguncelle_arabaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(araba_guncelle_veri_getir, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        ilan_guncelle_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "İlan Adı", "Fiyat", "Km", "Tarih", "Araba", "Şehir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ilan_guncelle_table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ilan_guncelle_scroll.setViewportView(ilan_guncelle_table);

        jButton11.setText("Güncelle");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        ilan_guncelle_veri_getir.setText("Verileri Getir");
        ilan_guncelle_veri_getir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ilan_guncelle_veri_getirActionPerformed(evt);
            }
        });

        jLabel14.setText("İlan Adı:");

        jLabel15.setText("Fiyat:");

        jLabel16.setText("Km:");

        jLabel17.setText("Tarih:");

        jLabel18.setText("Araba:");

        jLabel19.setText("Şehir:");

        javax.swing.GroupLayout kayitguncelle_ilanLayout = new javax.swing.GroupLayout(kayitguncelle_ilan);
        kayitguncelle_ilan.setLayout(kayitguncelle_ilanLayout);
        kayitguncelle_ilanLayout.setHorizontalGroup(
            kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ilan_guncelle_scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                        .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ilan_guncelle_ilan_adi_text, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(ilan_guncelle_veri_getir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                                .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                                        .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ilan_guncelle_fiyat_text, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ilan_guncelle_km_text, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16)))
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(109, 109, 109)
                                        .addComponent(jLabel19)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                                        .addComponent(ilan_guncelle_tarih_text, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ilan_guncelle_sehir_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                                .addComponent(ilan_guncelle_araba_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(125, 125, 125)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        kayitguncelle_ilanLayout.setVerticalGroup(
            kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ilan_guncelle_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ilan_guncelle_ilan_adi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ilan_guncelle_fiyat_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ilan_guncelle_km_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ilan_guncelle_tarih_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ilan_guncelle_sehir_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(ilan_guncelle_araba_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kayitguncelle_ilanLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(kayitguncelle_ilanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ilan_guncelle_veri_getir, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout kayitguncelleLayout = new javax.swing.GroupLayout(kayitguncelle);
        kayitguncelle.setLayout(kayitguncelleLayout);
        kayitguncelleLayout.setHorizontalGroup(
            kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 916, Short.MAX_VALUE)
            .addGroup(kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitguncelleLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(kayitguncelle_digerleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitguncelleLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(kayitguncelle_araba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitguncelleLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kayitguncelle_ilan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        kayitguncelleLayout.setVerticalGroup(
            kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
            .addGroup(kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitguncelleLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(kayitguncelle_digerleri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kayitguncelleLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(kayitguncelle_araba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(kayitguncelleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kayitguncelleLayout.createSequentialGroup()
                    .addContainerGap(21, Short.MAX_VALUE)
                    .addComponent(kayitguncelle_ilan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(1, 1, 1)))
        );

        getContentPane().add(kayitguncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 900, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü") || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")
                || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk") || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")) {
            anasayfa.setVisible(false);
            kayitekle.setVisible(false);
            kayitguncelle.setVisible(true);
            kayitsil.setVisible(false);
            kayitguncelle_digerleri.setVisible(true);
            kayitguncelle_araba.setVisible(false);
            kayitguncelle_ilan.setVisible(false);
            try {
                digerleri_guncelle_func();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Araba")){
            anasayfa.setVisible(false);
            kayitekle.setVisible(false);
            kayitguncelle.setVisible(true);
            kayitsil.setVisible(false);
            kayitguncelle_digerleri.setVisible(false);
            kayitguncelle_araba.setVisible(true);
            kayitguncelle_ilan.setVisible(false);
            try {
                araba_guncelle_func();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Ilan")){
            anasayfa.setVisible(false);
            kayitekle.setVisible(false);
            kayitguncelle.setVisible(true);
            kayitsil.setVisible(false);
            kayitguncelle_digerleri.setVisible(false);
            kayitguncelle_araba.setVisible(false);
            kayitguncelle_ilan.setVisible(true);
            ilan_guncelle_table.getColumnModel().getColumn(1).setPreferredWidth(300);
            ilan_guncelle_table.getColumnModel().getColumn(5).setPreferredWidth(200);
            ilan_sil_table.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
            try {
                ilan_guncelle_func();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü") || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")
                || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk") || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")) {
            anasayfa.setVisible(false);
            kayitekle.setVisible(false);
            kayitguncelle.setVisible(false);
            kayitsil.setVisible(true);
            kayitsil_digerleri.setVisible(true);
            kayitsil_araba.setVisible(false);
            kayitsil_ilan.setVisible(false);
            try {
                digerleri_sil_func();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Araba")){
            anasayfa.setVisible(false);
            kayitekle.setVisible(false);
            kayitguncelle.setVisible(false);
            kayitsil.setVisible(true);
            kayitsil_digerleri.setVisible(false);
            kayitsil_araba.setVisible(true);
            kayitsil_ilan.setVisible(false);
            try {
                araba_sil_func();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Ilan")){
            anasayfa.setVisible(false);
            kayitekle.setVisible(false);
            kayitguncelle.setVisible(false);
            kayitsil.setVisible(true);
            kayitsil_digerleri.setVisible(false);
            kayitsil_araba.setVisible(false);
            kayitsil_ilan.setVisible(true);
            ilan_sil_table.getColumnModel().getColumn(1).setPreferredWidth(300);
            ilan_sil_table.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
            try {
                ilan_sil_func();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü") || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")
                || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk") || jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")) {
            anasayfa.setVisible(false);
            kayitguncelle.setVisible(false);
            kayitsil.setVisible(false);
            ilan.setVisible(false);
            araba.setVisible(false);
            kayitekle.setVisible(true);
            digerleri.setVisible(true);
            digerleri_ad.setText(jComboBox1.getSelectedItem().toString());
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Araba")) {
            anasayfa.setVisible(false);
            kayitguncelle.setVisible(false);
            kayitsil.setVisible(false);
            ilan.setVisible(false);
            digerleri.setVisible(false);
            kayitekle.setVisible(true);
            araba.setVisible(true);
            try {
                araba_ekle_func();
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("İlan")){
            anasayfa.setVisible(false);
            kayitguncelle.setVisible(false);
            kayitsil.setVisible(false);
            digerleri.setVisible(false);
            araba.setVisible(false);
            kayitekle.setVisible(true);
            ilan.setVisible(true);
            try {
                ilan_ekle_func();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    ArrayList<Integer> yakit_id = new ArrayList<>();
    ArrayList<Integer> vites_id = new ArrayList<>();
    ArrayList<Integer> renk_id = new ArrayList<>();
    
    private void araba_ekle_func() throws SQLException, ClassNotFoundException {
        arabaekle_renk_combo.removeAllItems();
        arabaekle_vites_combo.removeAllItems();
        arabaekle_yakit_combo.removeAllItems();
        yakit_id.clear();
        vites_id.clear();
        renk_id.clear();
        Class.forName("com.mysql.cj.jdbc.Driver");

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        try {
            String sql1 = "SELECT VitesTuruID, Vites_Turu FROM tbl_vitesturu ORDER BY VitesTuruID ASC";
            ResultSet result = stmt.executeQuery(sql1);
            
            while (result.next()) {
                String vitesturu = result.getString("Vites_Turu");
                vites_id.add(Integer.parseInt(result.getString("VitesTuruID")));
                arabaekle_vites_combo.addItem(vitesturu);
            }
            String sql2 = "SELECT YakitTuruID, Yakit_Turu FROM tbl_yakitturu ORDER BY YakitTuruID ASC";
            result = stmt.executeQuery(sql2);
            while (result.next()) {
                String yakitturu = result.getString("Yakit_Turu");
                yakit_id.add(Integer.parseInt(result.getString("YakitTuruID")));
                arabaekle_yakit_combo.addItem(yakitturu);
            }
            String sql3 = "SELECT RenkID, Renk FROM tbl_renk ORDER BY RenkID ASC";
            result = stmt.executeQuery(sql3);
            while (result.next()) {
                String renk = result.getString("Renk");
                renk_id.add(Integer.parseInt(result.getString("RenkID")));
                arabaekle_renk_combo.addItem(renk);
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    ArrayList<Integer> araba_id = new ArrayList<>();
    ArrayList<Integer> sehir_id = new ArrayList<>();
    //?????
    private void ilan_ekle_func() throws ClassNotFoundException, SQLException{
        ilanekle_arac_combo.removeAllItems();
        ilanekle_sehir_combo.removeAllItems();
        araba_id.clear();
        sehir_id.clear();
        Class.forName("com.mysql.cj.jdbc.Driver");

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        Statement stmt2 = conn.createStatement();
        String comboYazi = null;
        String sql4;
        try {
            String sql1 = "SELECT ArabaID, Araba_Marka, Araba_Model, Araba_VitesTuruID, Araba_YakitTuruID, "
                    + "Araba_RenkID FROM tbl_araba ORDER BY ArabaID ASC";
            ResultSet result = stmt.executeQuery(sql1);
            
            
            while (result.next()) {
                comboYazi = "";
                comboYazi = result.getString("Araba_Marka");
                comboYazi +=  ", " + result.getString("Araba_Model");
                sql4 = "SELECT Vites_Turu FROM tbl_vitesturu where VitesTuruID = " + result.getString("Araba_VitesTuruID");
                ResultSet result2 = stmt2.executeQuery(sql4);
                result2.next();
                comboYazi += ", " + result2.getString("Vites_Turu");
                sql4 = "SELECT Yakit_Turu FROM tbl_yakitturu where YakitTuruID = " + result.getString("Araba_YakitTuruID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                comboYazi += ", " + result2.getString("Yakit_Turu");
                sql4 = "SELECT Renk FROM tbl_renk where RenkID = " + result.getString("Araba_RenkID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                comboYazi += ", " + result2.getString("Renk");
                ilanekle_arac_combo.addItem(comboYazi);
                araba_id.add(Integer.parseInt(result.getString("ArabaID")));
                result2.close();
            }
            String sql2 = "SELECT SehirID, Sehir FROM tbl_sehir ORDER BY SehirID ASC";
            result = stmt.executeQuery(sql2);
            while (result.next()) {
                String sehir = result.getString("Sehir");
                ilanekle_sehir_combo.addItem(sehir);
                sehir_id.add(Integer.parseInt(result.getString("SehirID")));
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void digerleri_sil_func() throws ClassNotFoundException, SQLException{
        String header1 = null, header2 = null, tablo_adi = null;
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü")){
            header1 = "YakitTuruID";
            header2 = "Yakit_Turu";
            tablo_adi = "tbl_yakitturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")){
            header1 = "VitesTuruID";
            header2 = "Vites_Turu";
            tablo_adi = "tbl_vitesturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk")){
            header1 = "RenkID";
            header2 = "Renk";
            tablo_adi = "tbl_renk";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")){
            header1 = "SehirID";
            header2 = "Sehir";
            tablo_adi = "tbl_sehir";
        }
        digerleri_sil_table.getColumnModel().getColumn(0).setHeaderValue(header1);
        digerleri_sil_table.getColumnModel().getColumn(1).setHeaderValue(header2);
        digerleri_sil_table.getTableHeader().repaint();
        
        
        DefaultTableModel model = (DefaultTableModel) digerleri_sil_table.getModel();
        model.setRowCount(0);
        Class.forName("com.mysql.cj.jdbc.Driver");

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        
        try {
            String sql1 = "SELECT " + header1 + ", " + header2 + " FROM " + tablo_adi + " ORDER BY " + header1 +" ASC";
            ResultSet result = stmt.executeQuery(sql1);
            
            while (result.next()) {
                String id = result.getString(header1);
                String deger = result.getString(header2);
                model.addRow(new Object[]{id, deger});
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void araba_sil_func() throws ClassNotFoundException, SQLException{
        DefaultTableModel model = (DefaultTableModel) araba_sil_table.getModel();
        model.setRowCount(0);
        Class.forName("com.mysql.cj.jdbc.Driver");

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        Statement stmt2 = conn.createStatement();
        String sql4;
        try {
            String sql1 = "SELECT ArabaID, Araba_Marka, Araba_Model, Araba_VitesTuruID, Araba_YakitTuruID, "
                    + "Araba_RenkID FROM tbl_araba ORDER BY ArabaID ASC";
            ResultSet result = stmt.executeQuery(sql1);
            String vitesturu = null, yakitturu = null, renk = null;
            
            while (result.next()) {
                sql4 = "SELECT Vites_Turu FROM tbl_vitesturu where VitesTuruID = " + result.getString("Araba_VitesTuruID");
                ResultSet result2 = stmt2.executeQuery(sql4);
                result2.next();
                vitesturu = result2.getString("Vites_Turu");
                sql4 = "SELECT Yakit_Turu FROM tbl_yakitturu where YakitTuruID = " + result.getString("Araba_YakitTuruID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                yakitturu = result2.getString("Yakit_Turu");
                sql4 = "SELECT Renk FROM tbl_renk where RenkID = " + result.getString("Araba_RenkID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                renk = result2.getString("Renk");
                model.addRow(new Object[]{result.getString("ArabaID"), result.getString("Araba_Marka"), result.getString("Araba_Model"), 
                vitesturu, yakitturu, renk});
                result2.close();
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void ilan_sil_func() throws ClassNotFoundException, SQLException{
        DefaultTableModel model = (DefaultTableModel) ilan_sil_table.getModel();
        model.setRowCount(0);
        Class.forName("com.mysql.cj.jdbc.Driver");

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        Statement stmt2 = conn.createStatement();
        String sql4;
        try {
            String sql1 = "SELECT IlanID, Ilan_Adi, Ilan_Fiyat, Ilan_Km, Ilan_Tarih,Ilan_ArabaID, "
                    + "Ilan_SehirID FROM tbl_ilan ORDER BY IlanID ASC";
            ResultSet result = stmt.executeQuery(sql1);
            String Tarih = null, renk = null;
            
            while (result.next()) {
                sql4 = "SELECT Sehir FROM tbl_sehir where SehirID = " + result.getString("Ilan_SehirID");
                ResultSet result2 = stmt2.executeQuery(sql4);
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                model.addRow(new Object[]{result.getString("IlanID"), result.getString("Ilan_Adi"), result.getString("Ilan_Fiyat"), 
                result.getString("Ilan_Km"), result.getString("Ilan_Tarih"), result.getString("Ilan_ArabaID"), result2.getString("Sehir")});
                result2.close();
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void digerleri_guncelle_func() throws ClassNotFoundException, SQLException{
        String header1 = null, header2 = null, tablo_adi = null;
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü")){
            header1 = "YakitTuruID";
            header2 = "Yakit_Turu";
            tablo_adi = "tbl_yakitturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")){
            header1 = "VitesTuruID";
            header2 = "Vites_Turu";
            tablo_adi = "tbl_vitesturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk")){
            header1 = "RenkID";
            header2 = "Renk";
            tablo_adi = "tbl_renk";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")){
            header1 = "SehirID";
            header2 = "Sehir";
            tablo_adi = "tbl_sehir";
        }
        digerleri_guncelle_table.getColumnModel().getColumn(0).setHeaderValue(header1);
        digerleri_guncelle_table.getColumnModel().getColumn(1).setHeaderValue(header2);
        digerleri_guncelle_table.getTableHeader().repaint();
        
        DefaultTableModel model = (DefaultTableModel) digerleri_guncelle_table.getModel();
        model.setRowCount(0);
        Class.forName("com.mysql.cj.jdbc.Driver");
        
        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        
        try {
            String sql1 = "SELECT " + header1 + ", " + header2 + " FROM " + tablo_adi + " ORDER BY " + header1 +" ASC";
            ResultSet result = stmt.executeQuery(sql1);
            
            while (result.next()) {
                String id = result.getString(header1);
                String deger = result.getString(header2);
                model.addRow(new Object[]{id, deger});
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        
    }
    
    private void araba_guncelle_func() throws ClassNotFoundException, SQLException{
        DefaultTableModel model = (DefaultTableModel) araba_guncelle_table.getModel();
        model.setRowCount(0);
        Class.forName("com.mysql.cj.jdbc.Driver");

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        Statement stmt2 = conn.createStatement();
        String sql4;
        try {
            String sql1 = "SELECT ArabaID, Araba_Marka, Araba_Model, Araba_VitesTuruID, Araba_YakitTuruID, "
                    + "Araba_RenkID FROM tbl_araba ORDER BY ArabaID ASC";
            ResultSet result = stmt.executeQuery(sql1);
            String vitesturu = null, yakitturu = null, renk = null;
            
            while (result.next()) {
                sql4 = "SELECT Vites_Turu FROM tbl_vitesturu where VitesTuruID = " + result.getString("Araba_VitesTuruID");
                ResultSet result2 = stmt2.executeQuery(sql4);
                result2.next();
                vitesturu = result2.getString("Vites_Turu");
                sql4 = "SELECT Yakit_Turu FROM tbl_yakitturu where YakitTuruID = " + result.getString("Araba_YakitTuruID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                yakitturu = result2.getString("Yakit_Turu");
                sql4 = "SELECT Renk FROM tbl_renk where RenkID = " + result.getString("Araba_RenkID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                renk = result2.getString("Renk");
                model.addRow(new Object[]{result.getString("ArabaID"), result.getString("Araba_Marka"), result.getString("Araba_Model"), 
                vitesturu, yakitturu, renk});
                result2.close();
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } 
        araba_guncelle_renk_combo.removeAllItems();
        araba_guncelle_vites_combo.removeAllItems();
        araba_guncelle_yakit_combo.removeAllItems();
        yakit_id.clear();
        vites_id.clear();
        renk_id.clear();
        Class.forName("com.mysql.cj.jdbc.Driver");

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        try {
            String sql1 = "SELECT VitesTuruID, Vites_Turu FROM tbl_vitesturu ORDER BY VitesTuruID ASC";
            ResultSet result = stmt.executeQuery(sql1);
            
            while (result.next()) {
                String vitesturu = result.getString("Vites_Turu");
                vites_id.add(Integer.parseInt(result.getString("VitesTuruID")));
                araba_guncelle_vites_combo.addItem(vitesturu);
            }
            String sql2 = "SELECT YakitTuruID, Yakit_Turu FROM tbl_yakitturu ORDER BY YakitTuruID ASC";
            result = stmt.executeQuery(sql2);
            while (result.next()) {
                String yakitturu = result.getString("Yakit_Turu");
                yakit_id.add(Integer.parseInt(result.getString("YakitTuruID")));
                araba_guncelle_yakit_combo.addItem(yakitturu);
            }
            String sql3 = "SELECT RenkID, Renk FROM tbl_renk ORDER BY RenkID ASC";
            result = stmt.executeQuery(sql3);
            while (result.next()) {
                String renk = result.getString("Renk");
                renk_id.add(Integer.parseInt(result.getString("RenkID")));
                araba_guncelle_renk_combo.addItem(renk);
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void ilan_guncelle_func() throws ClassNotFoundException, SQLException{
        ilan_guncelle_araba_combo.removeAllItems();
        ilan_guncelle_sehir_combo.removeAllItems();
        araba_id.clear();
        sehir_id.clear();
        DefaultTableModel model = (DefaultTableModel) ilan_guncelle_table.getModel();
        model.setRowCount(0);
        Class.forName("com.mysql.cj.jdbc.Driver");
        String comboYazi = null;
        String sql4 = null;

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        Statement stmt2 = conn.createStatement();
        try {
            String sql_ilan = "Select * FROM tbl_ilan ORDER BY IlanID ASC";
            ResultSet result_ilan = stmt.executeQuery(sql_ilan);
            while(result_ilan.next()){
                String ilan_id = result_ilan.getString("IlanID");
                String ilan_adi = result_ilan.getString("Ilan_Adi");
                String ilan_fiyat = result_ilan.getString("Ilan_Fiyat");
                String ilan_km = result_ilan.getString("Ilan_Km");
                String ilan_tarih = result_ilan.getString("Ilan_Tarih");
                String ilan_araba_id = result_ilan.getString("Ilan_ArabaID");
                String ilan_sehir_id = result_ilan.getString("Ilan_SehirID");
                
                String sql_araba = "SELECT * FROM tbl_araba WHERE ArabaID = " + 
                        ilan_araba_id;
                ResultSet result_araba = stmt2.executeQuery(sql_araba);
                result_araba.next();
                String araba_marka = result_araba.getString("Araba_Marka");
                String araba_model = result_araba.getString("Araba_Model");
                String araba_yakit_id = result_araba.getString("Araba_YakitTuruID");
                String araba_vites_id = result_araba.getString("Araba_VitesTuruID");
                String araba_renk_id = result_araba.getString("Araba_RenkID");
                String sql_vites = "SELECT * FROM tbl_vitesturu WHERE VitesTuruID = "
                        + araba_vites_id;
                String sql_yakit = "SELECT * FROM tbl_yakitturu WHERE YakitTuruID = "
                        + araba_yakit_id;
                String sql_renk = "SELECT * FROM tbl_renk WHERE RenkID = "
                        + araba_renk_id;
                String sql_sehir = "SELECT * FROM tbl_sehir WHERE SehirID = "
                        + ilan_sehir_id;
                ResultSet result_digerleri = stmt2.executeQuery(sql_vites);
                result_digerleri.next();
                String vites_turu = result_digerleri.getString("Vites_Turu");
                result_digerleri = stmt2.executeQuery(sql_yakit);
                result_digerleri.next();
                String yakit_turu = result_digerleri.getString("Yakit_Turu");
                result_digerleri = stmt2.executeQuery(sql_renk);
                result_digerleri.next();
                String renk = result_digerleri.getString("Renk");
                result_digerleri = stmt2.executeQuery(sql_sehir);
                result_digerleri.next();
                String sehir = result_digerleri.getString("Sehir");
                
                model.addRow(new Object[]{ilan_id, ilan_adi, ilan_fiyat, ilan_km, ilan_tarih,araba_marka + ", " + araba_model + 
                        ", " + vites_turu + ", " + yakit_turu + ", " + renk, sehir});
                result_araba.close();
                result_digerleri.close();
            }
            result_ilan.close();
            String sql1 = "SELECT ArabaID, Araba_Marka, Araba_Model, Araba_VitesTuruID, Araba_YakitTuruID, "
                    + "Araba_RenkID FROM tbl_araba ORDER BY ArabaID ASC";
            ResultSet result = stmt.executeQuery(sql1);
            
            
            while (result.next()) {
                comboYazi = "";
                comboYazi = result.getString("Araba_Marka");
                comboYazi +=  ", " + result.getString("Araba_Model");
                sql4 = "SELECT Vites_Turu FROM tbl_vitesturu where VitesTuruID = " + result.getString("Araba_VitesTuruID");
                ResultSet result2 = stmt2.executeQuery(sql4);
                result2.next();
                comboYazi += ", " + result2.getString("Vites_Turu");
                sql4 = "SELECT Yakit_Turu FROM tbl_yakitturu where YakitTuruID = " + result.getString("Araba_YakitTuruID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                comboYazi += ", " + result2.getString("Yakit_Turu");
                sql4 = "SELECT Renk FROM tbl_renk where RenkID = " + result.getString("Araba_RenkID");
                result2 = stmt2.executeQuery(sql4);
                result2.next();
                comboYazi += ", " + result2.getString("Renk");
                ilan_guncelle_araba_combo.addItem(comboYazi);
                araba_id.add(Integer.parseInt(result.getString("ArabaID")));
                result2.close();
            }
            String sql2 = "SELECT SehirID, Sehir FROM tbl_sehir ORDER BY SehirID ASC";
            result = stmt.executeQuery(sql2);
            while (result.next()) {
                String sehir = result.getString("Sehir");
                ilan_guncelle_sehir_combo.addItem(sehir);
                sehir_id.add(Integer.parseInt(result.getString("SehirID")));
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void ara_yenile() throws ClassNotFoundException, SQLException{
        ara_marka_combo.removeAllItems();
        ara_renk_combo.removeAllItems();
        ara_vites_combo.removeAllItems();
        ara_yakit_combo.removeAllItems();
        ara_sehir_combo.removeAllItems();
        ara_marka_combo.addItem("Seçiniz...");
        ara_renk_combo.addItem("Seçiniz...");
        ara_vites_combo.addItem("Seçiniz...");
        ara_yakit_combo.addItem("Seçiniz...");
        ara_sehir_combo.addItem("Seçiniz...");
        araba_id.clear();
        sehir_id.clear();
        Class.forName("com.mysql.cj.jdbc.Driver");
        String comboYazi = null;
        String sql4 = null;

        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        Statement stmt2 = conn.createStatement();
        try {
            String sql_araba = "SELECT DISTINCT Araba_Marka FROM tbl_araba";
            ResultSet result_araba = stmt2.executeQuery(sql_araba);
            while(result_araba.next()){
                String araba_marka = result_araba.getString("Araba_Marka");
//                String araba_model = result_araba.getString("Araba_Model");
//                String araba_yakit_id = result_araba.getString("Araba_YakitTuruID");
//                String araba_vites_id = result_araba.getString("Araba_VitesTuruID");
//                String araba_renk_id = result_araba.getString("Araba_RenkID");
                
                ara_marka_combo.addItem(araba_marka);
            }
            result_araba.close();

            String sql_renk = "SELECT * FROM tbl_renk";
            ResultSet result = stmt.executeQuery(sql_renk);
            while (result.next()) {
                String renk = result.getString("Renk");
                ara_renk_combo.addItem(renk);
                //renk_id.add(Integer.parseInt(result.getString("SehirID")));
            }
            String sql_vites = "SELECT * FROM tbl_vitesturu";
            result = stmt.executeQuery(sql_vites);
            while (result.next()) {
                String vites = result.getString("Vites_Turu");
                ara_vites_combo.addItem(vites);
                //renk_id.add(Integer.parseInt(result.getString("SehirID")));
            }
            String sql_yakit = "SELECT * FROM tbl_yakitturu";
            result = stmt.executeQuery(sql_yakit);
            while (result.next()) {
                String yakit = result.getString("Yakit_Turu");
                ara_yakit_combo.addItem(yakit);
                //renk_id.add(Integer.parseInt(result.getString("SehirID")));
            }
            String sql_sehir = "SELECT * FROM tbl_sehir";
            result = stmt.executeQuery(sql_sehir);
            while (result.next()) {
                String sehir = result.getString("Sehir");
                ara_sehir_combo.addItem(sehir);
                //renk_id.add(Integer.parseInt(result.getString("SehirID")));
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void ara_model_degistir() throws SQLException{
        ara_model_combo.removeAllItems();
        ara_model_combo.addItem("Seçiniz...");
        conn = DriverManager.getConnection(DB_URL, USER, PASS);
        stmt = conn.createStatement();
        Statement stmt2 = conn.createStatement();
        try {
            String sql_araba_model = "SELECT DISTINCT Araba_Model FROM tbl_araba WHERE Araba_Marka = '" + 
                    ara_marka_combo.getSelectedItem().toString() + "'";
            ResultSet result = stmt2.executeQuery(sql_araba_model);
            while(result.next()){
                String araba_model = result.getString("Araba_Model");
                ara_model_combo.addItem(araba_model);
            }
            result.close();
        } catch (SQLException se) {
            //se.printStackTrace();
        } catch (Exception e) {
            //e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void digerleri_kaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_digerleri_kaydetActionPerformed
        // TODO add your handling code here:
        String tabloadi = null;
        String sql = null;
        System.out.println(jComboBox1.getSelectedItem().toString());
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü")) {
            tabloadi = "tbl_yakitturu";
            sql = "INSERT INTO " + tabloadi + " set Yakit_Turu = '" + digerleri_text.getText() + "'";
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")) {
            tabloadi = "tbl_vitesturu";
            sql = "INSERT INTO " + tabloadi + " set Vites_Turu = '" + digerleri_text.getText() + "'";
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk")) {
            tabloadi = "tbl_renk";
            sql = "INSERT INTO " + tabloadi + " set Renk = '" + digerleri_text.getText() + "'";
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")) {
            tabloadi = "tbl_sehir";
            sql = "INSERT INTO " + tabloadi + " set Sehir = '" + digerleri_text.getText() + "'";
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        System.out.println("Inserted records into the table...");
    }//GEN-LAST:event_digerleri_kaydetActionPerformed

    private void digerleri_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_digerleri_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_digerleri_textActionPerformed

    private void araba_kaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_araba_kaydetActionPerformed
        // TODO add your handling code here:
        String sql = null;
        sql = "INSERT INTO tbl_araba SET Araba_Marka = '" + araba_marka_text.getText() + "', Araba_Model = '" + 
                araba_model_text.getText() + "', Araba_VitesTuruID = " + vites_id.get(arabaekle_vites_combo.getSelectedIndex()).toString() + 
                ", Araba_YakitTuruID = " + yakit_id.get(arabaekle_yakit_combo.getSelectedIndex()).toString() + 
                ", Araba_RenkID = " + renk_id.get(arabaekle_renk_combo.getSelectedIndex()).toString();
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        System.out.println("Inserted records into the table...");
    }//GEN-LAST:event_araba_kaydetActionPerformed

    private void ilanekle_tarih_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ilanekle_tarih_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ilanekle_tarih_textActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String sql = null;
        sql = "INSERT INTO tbl_ilan SET Ilan_Adi = '" + ilanekle_ilanadi_text.getText() + "', Ilan_Fiyat = " + 
                ilanekle_ilanfiyat_text.getText() + ", Ilan_Km = " + ilanekle_km_text.getText() + 
                ", Ilan_Tarih = '" + ilanekle_tarih_text.getText() + 
                "', Ilan_ArabaID = " + araba_id.get(ilanekle_arac_combo.getSelectedIndex()).toString() + 
                ", Ilan_SehirID = " + sehir_id.get(ilanekle_sehir_combo.getSelectedIndex()).toString();
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        System.out.println("Inserted records into the table...");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int satir = digerleri_sil_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) digerleri_sil_table.getModel();
        String id = model.getValueAt(satir, 0).toString();
        String tablo_adi = null, header=null;
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü")){
            header = "YakitTuruID";
            tablo_adi = "tbl_yakitturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")){
            header = "VitesTuruID";
            tablo_adi = "tbl_vitesturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk")){
            header = "RenkID";
            tablo_adi = "tbl_renk";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")){
            header = "SehirID";
            tablo_adi = "tbl_sehir";
        }
        String sql = "DELETE FROM " +  tablo_adi + " Where " + header + " = " + id ;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        try {
            digerleri_sil_func();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int satir = araba_sil_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) araba_sil_table.getModel();
        String id = model.getValueAt(satir, 0).toString();
        String sql = "DELETE FROM tbl_araba Where ArabaID = " + id;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        try {
            araba_sil_func();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int satir = ilan_sil_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) ilan_sil_table.getModel();
        String id = model.getValueAt(satir, 0).toString();
        String sql = "DELETE FROM tbl_ilan Where IlanID = " + id;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        try {
            ilan_sil_func();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int satir = digerleri_guncelle_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) digerleri_guncelle_table.getModel();
        String id = model.getValueAt(satir, 0).toString();
        String header = null, header2 = null, tablo_adi = null;
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Yakıt Türü")){
            header = "YakitTuruID";
            header2 = "Yakit_Turu";
            tablo_adi = "tbl_yakitturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Vites Türü")){
            header = "VitesTuruID";
            header2 = "Vites_Turu";
            tablo_adi = "tbl_vitesturu";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Renk")){
            header = "RenkID";
            header2 = "Renk";
            tablo_adi = "tbl_renk";
        }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Şehir")){
            header = "SehirID";
            header2 = "Sehir";
            tablo_adi = "tbl_sehir";
        }
        String value_text = digerleri_guncelle_deger_text.getText();
        String sql = "UPDATE " +  tablo_adi + " SET " + header2 + " = '" +
                value_text + "' WHERE " + header + " = " + id;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        try {
            digerleri_guncelle_func();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void digerleri_guncelle_veri_getirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_digerleri_guncelle_veri_getirActionPerformed
        // TODO add your handling code here:
        int satir = digerleri_guncelle_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) digerleri_guncelle_table.getModel();
        String id = model.getValueAt(satir, 1).toString();
        digerleri_guncelle_deger_text.setText(id);
    }//GEN-LAST:event_digerleri_guncelle_veri_getirActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        
        int satir = araba_guncelle_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) araba_guncelle_table.getModel();
        String araba_id = model.getValueAt(satir, 0).toString();
        String araba_adi = "tbl_araba";
        String araba_marka = araba_guncelle_marka_text.getText();
        String araba_model = araba_guncelle_model_text.getText();
        String sql = "UPDATE " +  araba_adi + " SET Araba_Marka = '" + araba_marka 
                + "' , Araba_Model = '" + araba_model + "', Araba_VitesTuruID = " + 
                vites_id.get(araba_guncelle_vites_combo.getSelectedIndex()) + 
                ", Araba_YakitTuruID = " + yakit_id.get(araba_guncelle_yakit_combo.getSelectedIndex()) + 
                ", Araba_RenkID = " + renk_id.get(araba_guncelle_renk_combo.getSelectedIndex()) + 
                " WHERE ArabaID = " + araba_id;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        try {
            araba_guncelle_func();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void araba_guncelle_veri_getirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_araba_guncelle_veri_getirActionPerformed
        int satir = araba_guncelle_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) araba_guncelle_table.getModel();
        String araba_marka = model.getValueAt(satir, 1).toString();
        araba_guncelle_marka_text.setText(araba_marka);
        String araba_model = model.getValueAt(satir, 2).toString();
        araba_guncelle_model_text.setText(araba_model);
        String araba_vites = model.getValueAt(satir, 3).toString();
        araba_guncelle_vites_combo.setSelectedItem(araba_vites);
        String araba_yakit = model.getValueAt(satir, 4).toString();
        araba_guncelle_yakit_combo.setSelectedItem(araba_yakit);
        String araba_renk = model.getValueAt(satir, 5).toString();
        araba_guncelle_renk_combo.setSelectedItem(araba_renk);
        
    }//GEN-LAST:event_araba_guncelle_veri_getirActionPerformed

    private void araba_guncelle_vites_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_araba_guncelle_vites_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_araba_guncelle_vites_comboActionPerformed

    private void araba_guncelle_yakit_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_araba_guncelle_yakit_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_araba_guncelle_yakit_comboActionPerformed

    private void ilan_guncelle_veri_getirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ilan_guncelle_veri_getirActionPerformed
        // TODO add your handling code here:
        int satir = ilan_guncelle_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) ilan_guncelle_table.getModel();
        String ilan_adi = model.getValueAt(satir, 1).toString();
        ilan_guncelle_ilan_adi_text.setText(ilan_adi);
        String ilan_fiyat = model.getValueAt(satir, 2).toString();
        ilan_guncelle_fiyat_text.setText(ilan_fiyat);
        String ilan_km = model.getValueAt(satir, 3).toString();
        ilan_guncelle_km_text.setText(ilan_km);
        String ilan_tarih = model.getValueAt(satir, 4).toString();
        ilan_guncelle_tarih_text.setText(ilan_tarih);
        String araba = model.getValueAt(satir, 5).toString();
        ilan_guncelle_araba_combo.setSelectedItem(araba);
        String sehir = model.getValueAt(satir, 6).toString();
        ilan_guncelle_sehir_combo.setSelectedItem(sehir);
    }//GEN-LAST:event_ilan_guncelle_veri_getirActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int satir = ilan_guncelle_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) ilan_guncelle_table.getModel();
        String ilan_id = model.getValueAt(satir, 0).toString();
        String ilan_adi = ilan_guncelle_ilan_adi_text.getText();
        String ilan_fiyat = ilan_guncelle_fiyat_text.getText();
        String ilan_km = ilan_guncelle_km_text.getText();
        String ilan_tarih = ilan_guncelle_tarih_text.getText();
        String ilan_araba_id = araba_id.get(ilan_guncelle_araba_combo.getSelectedIndex()).toString();
        String ilan_sehir_id = sehir_id.get(ilan_guncelle_sehir_combo.getSelectedIndex()).toString();
        String sql = "UPDATE tbl_ilan SET Ilan_Adi = '" + ilan_adi
        + "' , Ilan_Fiyat = " + ilan_fiyat + ", Ilan_Km = " +
        ilan_km + ", Ilan_Tarih = '" + ilan_tarih + "', Ilan_ArabaID = " + ilan_araba_id +
        ", Ilan_SehirID = " + ilan_sehir_id + " WHERE ilanID = " + ilan_id;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        try {
            ilan_guncelle_func();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void ara_radio_markaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ara_radio_markaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ara_radio_markaActionPerformed

    ArrayList<String> sehirler_string = new ArrayList<String>();
    
    private void ara_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ara_butonActionPerformed
        anasayfa.setVisible(true);
        kayitekle.setVisible(false);
        kayitsil.setVisible(false);
        kayitguncelle.setVisible(false);
        sehirler_string.clear();
        DefaultTableModel model = (DefaultTableModel) ara_tablo.getModel();
        model.setRowCount(0);    
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            String sql_ilan_ara = "SELECT * FROM tbl_ilan";
            String sql_araba_ara = "SELECT ArabaID FROM tbl_araba";
            String sql_sehir_ara = "SELECT * FROM tbl_sehir";
            String sql_yakit_ara = "SELECT * FROM tbl_yakitturu";
            String sql_vites_ara = "SELECT * FROM tbl_vitesturu";
            String sql_renk_ara = "SELECT * FROM tbl_renk";
            int flag_ilan_adi = 0, flag_ilan_km = 0, flag_ilan_fiyat = 0, flag_ilan_tarih = 0;
            int flag_ilan_sehir = 0, flag_araba_marka = 0, flag_araba_model = 0, flag_araba_renk = 0, flag_araba_vites = 0;
            int flag_araba_yakit = 0, flag_radio_marka = 0;
            if(!ara_ilan_adi_text.getText().isEmpty()){
                flag_ilan_adi = 1;
                sql_ilan_ara += " WHERE Ilan_Adi LIKE '%" + ara_ilan_adi_text.getText() +
                        "%'";
            }
            if(!ara_kilometre_min.getText().isEmpty() && !ara_kilometre_max.getText().isEmpty()){
                if(flag_ilan_adi == 1){
                    sql_ilan_ara += " and Ilan_Km >= " + ara_kilometre_min.getText() +
                            " and Ilan_Km <= " + ara_kilometre_max.getText() ;
                }else{
                    sql_ilan_ara += " WHERE Ilan_Km >= " + ara_kilometre_min.getText() +
                            " and Ilan_Km <= " + ara_kilometre_max.getText();
                }
                flag_ilan_km = 1;
            }
            if(!ara_fiyat_min.getText().isEmpty() && !ara_fiyat_max.getText().isEmpty()){
                flag_ilan_fiyat = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1){
                    sql_ilan_ara += " and Ilan_Fiyat >= " + ara_fiyat_min.getText()
                            + " and Ilan_Fiyat <= " + ara_fiyat_max.getText() ;
                }else{
                    sql_ilan_ara += " WHERE Ilan_Fiyat >= " + ara_fiyat_min.getText()
                            + " and Ilan_Fiyat <= " + ara_fiyat_max.getText() ;
                }
            }
            if(ara_tarih_combo.getSelectedIndex() != 0){
                flag_ilan_tarih = 1;
                if(ara_tarih_combo.getSelectedIndex() == 1){
                    Date suanki_zaman = new Date(System.currentTimeMillis());
                    Date dunku_zaman = new Date(System.currentTimeMillis()-24*60*60*1000);
                    if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1){
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " and Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }else{
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " WHERE Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }
                }else if(ara_tarih_combo.getSelectedIndex() == 2){
                    Date suanki_zaman = new Date(System.currentTimeMillis());
                    Date dunku_zaman = new Date(System.currentTimeMillis()-7*24*60*60*1000);
                    if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1){
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " and Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }else{
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " WHERE Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }
                }else if(ara_tarih_combo.getSelectedIndex() == 3){
                    Date suanki_zaman = new Date(System.currentTimeMillis());
                    Date dunku_zaman = new Date(System.currentTimeMillis()- 15*24*60*60*1000);
                    dunku_zaman = new Date(dunku_zaman.getTime() - 15*24*60*60*1000);
                    if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1){
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " and Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }else{
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " WHERE Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }
                }else if(ara_tarih_combo.getSelectedIndex() == 4){
                    Date suanki_zaman = null;
                    Date dunku_zaman = null;
                    suanki_zaman = new Date(System.currentTimeMillis());
                    dunku_zaman = new Date(System.currentTimeMillis()- 15*24*60*60*1000);
                    for(int i = 0 ; i < 23 ; i++){
                        dunku_zaman = new Date(dunku_zaman.getTime() - 15*24*60*60*1000);
                    }
                    if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1){
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " and Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }else{
                        System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman));
                        sql_ilan_ara += " WHERE Ilan_Tarih > '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(dunku_zaman)
                                + "' and Ilan_Tarih < '" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(suanki_zaman) + "'";
                    }
                }
            }
            if(ara_sehir_combo.getSelectedIndex() != 0){
                flag_ilan_sehir = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1 || flag_ilan_tarih == 1){
                    sql_ilan_ara += " and Ilan_SehirID IN (SELECT SehirID FROM tbl_sehir WHERE Sehir = '" + 
                            ara_sehir_combo.getSelectedItem().toString() + "')";
                }else{
                    sql_ilan_ara += " WHERE Ilan_SehirID IN (SELECT SehirID FROM tbl_sehir WHERE Sehir = '" + 
                            ara_sehir_combo.getSelectedItem().toString() + "')";
                }
            }
            if(ara_marka_combo.getSelectedIndex() != 0){
                flag_araba_marka = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1 || flag_ilan_tarih == 1 || flag_ilan_sehir == 1){
                    sql_ilan_ara += " and Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_Marka = '" +
                        ara_marka_combo.getSelectedItem().toString() + "')";
                }else {
                    sql_ilan_ara += " WHERE Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_Marka = '" +
                        ara_marka_combo.getSelectedItem().toString() + "')";
                }
            }
            if(ara_model_combo.getSelectedIndex() != 0){
                flag_araba_model = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1 || flag_ilan_tarih == 1 || flag_ilan_sehir == 1 || flag_araba_marka == 1){
                    sql_ilan_ara += " and Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_Model = '" +
                        ara_model_combo.getSelectedItem().toString() + "')";
                }else {
                    sql_ilan_ara += " WHERE Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_Model = '" +
                        ara_model_combo.getSelectedItem().toString() + "')";
                }
            }
            if(ara_renk_combo.getSelectedIndex() != 0){
                flag_araba_renk = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1 || flag_ilan_tarih == 1 
                        || flag_ilan_sehir == 1 || flag_araba_marka == 1 || flag_araba_model == 1){
                    sql_ilan_ara += " and Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_RenkID IN (SELECT "
                            + "RenkID FROM tbl_renk WHERE Renk = '" + ara_renk_combo.getSelectedItem().toString() + "'))";
                }else {
                    sql_ilan_ara += " WHERE Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_RenkID IN (SELECT "
                            + "RenkID FROM tbl_renk WHERE Renk = '" + ara_renk_combo.getSelectedItem().toString() + "'))";
                }
            }
            if(ara_vites_combo.getSelectedIndex() != 0){
                flag_araba_vites = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1 || flag_ilan_tarih == 1 
                        || flag_ilan_sehir == 1 || flag_araba_marka == 1 || flag_araba_model == 1 || flag_araba_renk == 1){
                    sql_ilan_ara += " and Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_VitesTuruID IN (SELECT "
                            + "VitesTuruID FROM tbl_vitesturu WHERE Vites_Turu = '" + ara_vites_combo.getSelectedItem().toString() + "'))";
                }else {
                    sql_ilan_ara += " WHERE Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_VitesTuruID IN (SELECT "
                            + "VitesTuruID FROM tbl_vitesturu WHERE Vites_Turu = '" + ara_vites_combo.getSelectedItem().toString() + "'))";
                }
            }
            if(ara_yakit_combo.getSelectedIndex() != 0){
                flag_araba_yakit = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1 || flag_ilan_tarih == 1 
                        || flag_ilan_sehir == 1 || flag_araba_marka == 1 || flag_araba_model == 1 
                        || flag_araba_renk == 1 || flag_araba_vites == 1){
                    sql_ilan_ara += " and Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_YakitTuruID IN (SELECT "
                            + "YakitTuruID FROM tbl_yakitturu WHERE Yakit_Turu = '" + ara_yakit_combo.getSelectedItem().toString() + "'))";
                }else {
                    sql_ilan_ara += " WHERE Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba WHERE Araba_YakitTuruID IN (SELECT "
                            + "YakitTuruID FROM tbl_yakitturu WHERE Yakit_Turu = '" + ara_yakit_combo.getSelectedItem().toString() + "'))";
                }
            }
            if(ara_radio_marka.isSelected() && ara_aZ_combo.getSelectedIndex() != 0){
                flag_radio_marka = 1;
                if(flag_ilan_adi == 1 || flag_ilan_km == 1 || flag_ilan_fiyat == 1 || flag_ilan_tarih == 1 
                        || flag_ilan_sehir == 1 || flag_araba_marka == 1 || flag_araba_model == 1 
                        || flag_araba_renk == 1 || flag_araba_vites == 1 || flag_araba_yakit == 1){
                    sql_ilan_ara += " and Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba ORDER BY Araba_Marka ASC)";
                }else{
                    sql_ilan_ara += " WHERE Ilan_ArabaID IN (SELECT ArabaID FROM tbl_araba ORDER BY Araba_Marka ASC)";
                }
                System.out.println("aaa");
            }
            
            ResultSet result = stmt.executeQuery(sql_ilan_ara);
            System.out.println(sql_ilan_ara);
            Statement stmt2 = conn.createStatement();
            Statement stmt3 = conn.createStatement();
            while (result.next()) {
                String sql_sehir = "SELECT * FROM tbl_sehir WHERE SehirID = " + result.getString("Ilan_SehirID");
                ResultSet result2 = stmt2.executeQuery(sql_sehir);
                result2.next();
                String sehir_isim = result2.getString("Sehir");
                String sql_araba = "SELECT * FROM tbl_araba WHERE ArabaID = " + result.getString("Ilan_ArabaID");
                ResultSet result3 = stmt3.executeQuery(sql_araba);
                result3.next();
                String araba_vites_id = result3.getString("Araba_VitesTuruID");
                String araba_yakit_id = result3.getString("Araba_YakitTuruID");
                String araba_renk_id = result3.getString("Araba_RenkID");
                String araba = result3.getString("Araba_Marka") + ", " + result3.getString("Araba_Model");
                
                String sql_araba_vites = "SELECT * FROM tbl_vitesturu WHERE VitesTuruID = " + araba_vites_id;
                result3 = stmt3.executeQuery(sql_araba_vites);
                result3.next();
                araba += ", " + result3.getString("Vites_Turu");
                
                String sql_araba_yakit = "SELECT * FROM tbl_yakitturu WHERE YakitTuruID = " + araba_yakit_id;
                result3 = stmt3.executeQuery(sql_araba_yakit);
                result3.next();
                araba += ", " + result3.getString("Yakit_Turu");
                
                String sql_araba_renk = "SELECT * FROM tbl_renk WHERE RenkID = " + araba_renk_id;
                result3 = stmt3.executeQuery(sql_araba_renk);
                result3.next();
                araba += ", " + result3.getString("Renk");
                
                model.addRow(new Object[]{result.getString("IlanID"), result.getString("Ilan_Adi"), 
                result.getString("Ilan_Fiyat"), result.getString("Ilan_Km"), result.getString("Ilan_Tarih")
                        , araba, sehir_isim});
                result2.close();
            }
            result.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        try {
            // TODO add your handling code here:
            ara_yenile();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ara_butonActionPerformed

    /**
     * @param args the command line arguments
     */
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    //static final String DB_URL = "jdbc:mysql://localhost/vehiclebuyingsellingprogram";
    static final String DB_URL = "jdbc:mysql://localhost/vehiclebuyingsellingprogram?useLegacyDatetimeCode=false&serverTimezone=America/New_York";

    //  Database credentials
    static final String USER = "root";
    static final String PASS = "123456";
    static Connection conn = null;
    static Statement stmt = null;
    
    

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VehicleBuyingSellingProgram().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(VehicleBuyingSellingProgram.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel anasayfa;
    private javax.swing.JComboBox<String> ara_aZ_combo;
    private javax.swing.JComboBox<String> ara_artanAzalan_combo;
    private javax.swing.JButton ara_buton;
    private javax.swing.JTextField ara_fiyat_max;
    private javax.swing.JTextField ara_fiyat_min;
    private javax.swing.JTextField ara_ilan_adi_text;
    private javax.swing.JTextField ara_kilometre_max;
    private javax.swing.JTextField ara_kilometre_min;
    private javax.swing.JComboBox<String> ara_marka_combo;
    private javax.swing.JComboBox<String> ara_model_combo;
    private javax.swing.JRadioButton ara_radio_fiyat;
    private javax.swing.JRadioButton ara_radio_kilometre;
    private javax.swing.JRadioButton ara_radio_marka;
    private javax.swing.JRadioButton ara_radio_model;
    private javax.swing.JComboBox<String> ara_renk_combo;
    private javax.swing.JScrollPane ara_scroll;
    private javax.swing.JComboBox<String> ara_sehir_combo;
    private javax.swing.JTable ara_tablo;
    private javax.swing.JComboBox<String> ara_tarih_combo;
    private javax.swing.JComboBox<String> ara_vites_combo;
    private javax.swing.JComboBox<String> ara_yakit_combo;
    private javax.swing.JPanel araba;
    private javax.swing.JTextField araba_guncelle_marka_text;
    private javax.swing.JTextField araba_guncelle_model_text;
    private javax.swing.JComboBox<String> araba_guncelle_renk_combo;
    private javax.swing.JScrollPane araba_guncelle_scroll;
    private javax.swing.JTable araba_guncelle_table;
    private javax.swing.JButton araba_guncelle_veri_getir;
    private javax.swing.JComboBox<String> araba_guncelle_vites_combo;
    private javax.swing.JComboBox<String> araba_guncelle_yakit_combo;
    private javax.swing.JPanel araba_ic;
    private javax.swing.JButton araba_kaydet;
    private javax.swing.JTextField araba_marka_text;
    private javax.swing.JTextField araba_model_text;
    private javax.swing.JScrollPane araba_sil_scroll;
    private javax.swing.JTable araba_sil_table;
    private javax.swing.JComboBox<String> arabaekle_renk_combo;
    private javax.swing.JComboBox<String> arabaekle_vites_combo;
    private javax.swing.JComboBox<String> arabaekle_yakit_combo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel digerleri;
    private javax.swing.JLabel digerleri_ad;
    private javax.swing.JTextField digerleri_guncelle_deger_text;
    private javax.swing.JScrollPane digerleri_guncelle_scroll;
    private javax.swing.JTable digerleri_guncelle_table;
    private javax.swing.JButton digerleri_guncelle_veri_getir;
    private javax.swing.JPanel digerleri_ic;
    private javax.swing.JButton digerleri_kaydet;
    private javax.swing.JScrollPane digerleri_sil_scroll;
    private javax.swing.JTable digerleri_sil_table;
    private javax.swing.JTextField digerleri_text;
    private javax.swing.JPanel filtre;
    private javax.swing.JPanel ilan;
    private javax.swing.JComboBox<String> ilan_guncelle_araba_combo;
    private javax.swing.JTextField ilan_guncelle_fiyat_text;
    private javax.swing.JTextField ilan_guncelle_ilan_adi_text;
    private javax.swing.JTextField ilan_guncelle_km_text;
    private javax.swing.JScrollPane ilan_guncelle_scroll;
    private javax.swing.JComboBox<String> ilan_guncelle_sehir_combo;
    private javax.swing.JTable ilan_guncelle_table;
    private javax.swing.JTextField ilan_guncelle_tarih_text;
    private javax.swing.JButton ilan_guncelle_veri_getir;
    private javax.swing.JScrollPane ilan_sil_scroll;
    private javax.swing.JTable ilan_sil_table;
    private javax.swing.JComboBox<String> ilanekle_arac_combo;
    private javax.swing.JTextField ilanekle_ilanadi_text;
    private javax.swing.JTextField ilanekle_ilanfiyat_text;
    private javax.swing.JTextField ilanekle_km_text;
    private javax.swing.JComboBox<String> ilanekle_sehir_combo;
    private javax.swing.JTextField ilanekle_tarih_text;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel kayitekle;
    private javax.swing.JPanel kayitguncelle;
    private javax.swing.JPanel kayitguncelle_araba;
    private javax.swing.JPanel kayitguncelle_digerleri;
    private javax.swing.JPanel kayitguncelle_ilan;
    private javax.swing.JPanel kayitsil;
    private javax.swing.JPanel kayitsil_araba;
    private javax.swing.JPanel kayitsil_digerleri;
    private javax.swing.JPanel kayitsil_ilan;
    // End of variables declaration//GEN-END:variables
}
